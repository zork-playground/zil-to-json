<?xml version="1.0" encoding="utf-8"?>

<!--
To build for distribution:
dotnet msbuild Build.proj -t:PackageAllRids -p:Configuration=Release
-->

<!-- Copied from IronPython and modified. See Build/IronPython-License.txt. -->
<!--EXTERNAL_PROPERTIES: MSBuildThisFileDirectory;ReleaseLevel;MajorVersion;MinorVersion;MicroVersion;AssemblyRevision;ReleaseSerial;TargetFramework;Features-->
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="16.0">
<!--<Project DefaultTargets="Build" Sdk="Microsoft.NET.Sdk">-->

  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <MainBuildPrefix Condition=" '$(MainBuildPrefix)' == '' "></MainBuildPrefix>
    <Mono Condition="'$(OS)' != 'Windows_NT' AND !$(TargetFramework.StartsWith('netcore'))">true</Mono>
    <MacOS Condition="'$(OS)' == 'Unix' AND Exists('/Applications') AND Exists('/Library') AND Exists('/System') AND Exists('/Volumes')">true</MacOS>
    <WindowsTarget>false</WindowsTarget>
    <WindowsTarget Condition="$(RuntimeIdentifier.StartsWith('win'))">true</WindowsTarget>
    <PortableTarget>false</PortableTarget>
    <PortableTarget Condition="'$(RuntimeIdentifier)' == ''">true</PortableTarget>
    <UnixTarget>false</UnixTarget>
    <UnixTarget Condition="!($(WindowsTarget) OR $(PortableTarget))">true</UnixTarget>

    <RootDir>$(MSBuildThisFileDirectory)</RootDir>
    <Solution>$(RootDir)Zilf.sln</Solution>
    <!--<UtilDir>$(RootDir)Util</UtilDir>-->
    <!--<ReferenceDir>$(RootDir)Util\References</ReferenceDir>-->
    <BinDir>$(RootDir)bin</BinDir>
    <BuildSysDir>$(RootDir)Build</BuildSysDir>
    <TargetFrameworks Condition="'$(TargetFrameworks)' == ''">netcoreapp2.2</TargetFrameworks>
    <RuntimeIdentifiers Condition="'$(RuntimeIdentifiers)' == ''">win-x86;win-x64;linux-arm;linux-x64;osx-x64</RuntimeIdentifiers>

    <!-- Allows one restore to apply to multiple builds -->
    <TargetLatestRuntimePatch>true</TargetLatestRuntimePatch>

    <!--<BuildInParallel Condition=" '$(BuildInParallel)' == '' ">false</BuildInParallel>-->
  </PropertyGroup>

  <Import Project="$(BuildSysDir)\Tasks.targets" />
  <Import Project="$(MSBuildThisFileDirectory)\CurrentVersion.props" Condition="'$(ReleaseLevel)' == ''" />

  <PropertyGroup>
    <PackageVersion Condition="'$(ReleaseLevel)' == 'final'">$(MajorVersion).$(MinorVersion).$(MicroVersion)</PackageVersion>
    <PackageVersion Condition="'$(ReleaseLevel)' != 'final' or '$(ReleaseSerial)' != '0'">$(MajorVersion).$(MinorVersion).$(MicroVersion)-$(ReleaseLevel)$(ReleaseSerial)</PackageVersion>
    <PackageName Condition=" '$(RuntimeIdentifier)' != '' ">zilf-$(PackageVersion)-$(RuntimeIdentifier)</PackageName>
    <PackageName Condition=" '$(RuntimeIdentifier)' == '' ">zilf-$(PackageVersion)-netcore</PackageName>
    <StageDir>$(RootDir)Package\$(Configuration)\Stage\$(PackageName)</StageDir>
    <PackageDir>$(RootDir)Package\$(Configuration)\Packages</PackageDir>
  </PropertyGroup>

  <PropertyGroup>
    <BuildProperties>
      RootDir=$(RootDir);
      Solution=$(Solution);
      Configuration=$(Configuration);
      BinDir=$(BinDir);
      StageDir=$(StageDir);
      BuildSysDir=$(BuildSysDir);
      WindowsTarget=$(WindowsTarget);
      UnixTarget=$(UnixTarget)
    </BuildProperties>
  </PropertyGroup>

  <!--<PropertyGroup>
    <NuGet>$(UtilDir)\NuGet\nuget.exe</NuGet>
    <NuGet Condition=" '$(Mono)' != '' ">mono $(NuGet)</NuGet>
  </PropertyGroup>-->

  <PropertyGroup>
    <ExcludedProjects>
      $(RootDir)src\Analyzers\**\*;
      $(RootDir)src\Dezapf\**\*
    </ExcludedProjects>
  </PropertyGroup>

  <ItemGroup>
    <StageProjects Include="src\Zilf\Zilf.csproj" />
    <StageProjects Include="src\Zapf\Zapf.csproj" />
  </ItemGroup>

  <ItemGroup>
    <MainStageFiles Include="$(RootDir)README.md" />
    <MainStageFiles Include="$(RootDir)COPYING.txt" />
  </ItemGroup>

  <Target Name="FindStageProjects">
    <!--<GetProjectsFromSolution Solution="$(Solution)">
      <Output TaskParameter="Projects" ItemName="StageProjects" />
    </GetProjectsFromSolution>-->

    <!--<ItemGroup>
      <StageProjects Include="$(RootDir)src\**\*.csproj" />
    </ItemGroup>

    <ItemGroup>
      <StageProjects Remove="$(RootDir)src\Analyzers\**\*" />
    </ItemGroup>-->

    <Message Importance="high" Text="Stage projects:@(StageProjects->'%0d%0a    %(Identity)','')" />
  </Target>

  <Target Name="RestoreReferences" DependsOnTargets="FindStageProjects">
    <MSBuild
      Projects="@(StageProjects)"
      Targets="Restore"
      Condition=" '$(AlreadyRestored)' != 'true' " />
  </Target>

  <Target Name="Build" DependsOnTargets="RestoreReferences">
    <MSBuild
      Projects="@(StageProjects)"
      Targets="Build"
      Properties="$(BuildProperties);Configuration=$(Configuration)" />
  </Target>

  <Target Name="Rebuild" DependsOnTargets="RestoreReferences">
    <MSBuild
      Projects="@(StageProjects)"
      Targets="Rebuild"
      Properties="$(BuildProperties);Configuration=$(Configuration)" />
  </Target>

  <Target Name="Clean">
    <MSBuild
      Projects="@(StageProjects)"
      Targets="Clean"
      Properties="$(BuildProperties);Configuration=$(Configuration)" />
  </Target>

  <Target Name="_MakeStageDir">
    <MakeDir Directories="$(StageDir)" Condition="!Exists('$(StageDir)')" />
  </Target>

  <Target Name="_PlatformStage" DependsOnTargets="RestoreReferences;_MakeStageDir">
    <MSBuild
      Projects="@(StageProjects)"
      Targets="Build"
      Properties="$(BuildProperties);Configuration=$(Configuration);Staging=true" />
  </Target>

  <Target Name="_CopyMainStageFiles" DependsOnTargets="_MakeStageDir">
    <Copy SourceFiles="@(MainStageFiles)" DestinationFolder="$(StageDir)" />
  </Target>

  <Target Name="_CopySamples" DependsOnTargets="_MakeStageDir">
    <MSBuild Projects="$(RootDir)\sample\Samples.proj"
             Properties="OutputPath=$(StageDir)"
             Targets="Stage" />
  </Target>

  <Target Name="_CopyZilLib" DependsOnTargets="_MakeStageDir">
    <MSBuild Projects="$(RootDir)\zillib\ZilLib.proj"
             Properties="OutputPath=$(StageDir)"
             Targets="Stage" />
  </Target>

  <PropertyGroup>
    <StageDependsOn>
      _MakeStageDir;
      _PlatformStage;
      _CopyMainStageFiles;
      _CopySamples;
      _CopyZilLib
    </StageDependsOn>
  </PropertyGroup>

  <Target Name="Stage" DependsOnTargets="$(StageDependsOn)" />

  <!-- This looks like an empty target, but the targets files use it as an AfterTargets -->
  <Target Name="Package" DependsOnTargets="Stage" />

  <Target Name="PackageAllRids">
    <MSBuild Projects="$(MSBuildProjectFullPath)"
             Targets="RestoreReferences" />

    <ItemGroup>
      <RuntimeIdentifierForPackage Include="$(RuntimeIdentifiers)" />

      <ProjectToPackage Include="@(RuntimeIdentifierForPackage->'$(MSBuildProjectFullPath)')">
        <AdditionalProperties>
          RuntimeIdentifier=%(RuntimeIdentifierForPackage.Identity);
          AlreadyRestored=true
        </AdditionalProperties>
      </ProjectToPackage>
    </ItemGroup>

    <MSBuild Projects="@(ProjectToPackage)"
             Targets="Package" />
             <!--BuildInParallel="$(BuildInParallel)" />-->

    <MSBuild Projects="$(MSBuildProjectFullPath)"
             Targets="Package"
             Properties="RuntimeIdentifier=;RuntimeIdentifiers=;AlreadyRestored=true" />
  </Target>

  <Target Name="PackagePortable">
    <MSBuild Projects="$(MSBuildProjectFullPath)"
             Targets="Package"
             Properties="RuntimeIdentifier=;RuntimeIdentifiers=" />
  </Target>

  <Target Name="CleanAllRids">
    <ItemGroup>
      <RuntimeIdentifierForPackage Include="$(RuntimeIdentifiers)" />

      <ProjectToClean Include="@(RuntimeIdentifierForPackage->'$(MSBuildProjectFullPath)')">
        <AdditionalProperties>RuntimeIdentifier=%(RuntimeIdentifierForPackage.Identity)</AdditionalProperties>
      </ProjectToClean>
    </ItemGroup>

    <MSBuild Projects="@(ProjectToClean)"
             Targets="Clean" />
             <!--BuildInParallel="$(BuildInParallel)" />-->
  </Target>

  <Import Project="$(RootDir)\Package\**\*.Packaging.targets" />
</Project>
